{"version":3,"sources":["MiniXHRUpload.js"],"names":["nanoid","require","Provider","RequestClient","Socket","emitSocketProgress","getSocketHost","EventTracker","ProgressTimeout","NetworkError","isNetworkError","internalRateLimitedQueue","buildResponseError","xhr","error","err","Error","cause","request","setTypeInBlob","file","dataWithUpdatedType","data","slice","size","meta","type","addMetadata","formData","opts","metaFields","Array","isArray","Object","keys","forEach","item","append","createFormDataUpload","formPost","FormData","name","fieldName","createBareUpload","module","exports","MiniXHRUpload","constructor","uppy","validateStatus","status","requests","uploaderEvents","create","i18n","uploadFile","id","current","total","getFile","isRemote","overrides","getState","xhrUpload","headers","eventName","fileID","eventHandler","on","targetFileID","log","Promise","resolve","reject","XMLHttpRequest","timer","timeout","abort","queuedRequest","done","seconds","Math","ceil","emit","upload","addEventListener","ev","loaded","progress","lengthComputable","uploader","bytesUploaded","bytesTotal","remove","target","responseText","body","getResponseData","uploadURL","responseUrlFieldName","uploadResp","getResponseError","response","open","method","toUpperCase","endpoint","withCredentials","Boolean","responseType","header","setRequestHeader","run","send","priority","Client","remote","providerOptions","provider","client","post","url","fieldname","metadata","fromEntries","map","httpMethod","useFormData","then","res","token","host","companionUrl","socket","autoOpen","isPaused","close","progressData","errData","resp","assign","message","catch"],"mappings":"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","sourcesContent":["const { nanoid } = require('nanoid')\nconst { Provider, RequestClient, Socket } = require('@uppy/companion-client')\nconst emitSocketProgress = require('@uppy/utils/lib/emitSocketProgress')\nconst getSocketHost = require('@uppy/utils/lib/getSocketHost')\nconst EventTracker = require('@uppy/utils/lib/EventTracker')\nconst ProgressTimeout = require('@uppy/utils/lib/ProgressTimeout')\nconst NetworkError = require('@uppy/utils/lib/NetworkError')\nconst isNetworkError = require('@uppy/utils/lib/isNetworkError')\nconst { internalRateLimitedQueue } = require('@uppy/utils/lib/RateLimitedQueue')\n\n// See XHRUpload\nfunction buildResponseError (xhr, error) {\n  if (isNetworkError(xhr)) return new NetworkError(error, xhr)\n\n  // TODO: when we drop support for browsers that do not support this syntax, use:\n  // return new Error('Upload error', { cause: error, request: xhr })\n  const err = new Error('Upload error')\n  err.cause = error\n  err.request = xhr\n  return err\n}\n\n// See XHRUpload\nfunction setTypeInBlob (file) {\n  const dataWithUpdatedType = file.data.slice(0, file.data.size, file.meta.type)\n  return dataWithUpdatedType\n}\n\nfunction addMetadata (formData, meta, opts) {\n  const metaFields = Array.isArray(opts.metaFields)\n    ? opts.metaFields\n    // Send along all fields by default.\n    : Object.keys(meta)\n  metaFields.forEach((item) => {\n    formData.append(item, meta[item])\n  })\n}\n\nfunction createFormDataUpload (file, opts) {\n  const formPost = new FormData()\n\n  addMetadata(formPost, file.meta, opts)\n\n  const dataWithUpdatedType = setTypeInBlob(file)\n\n  if (file.name) {\n    formPost.append(opts.fieldName, dataWithUpdatedType, file.meta.name)\n  } else {\n    formPost.append(opts.fieldName, dataWithUpdatedType)\n  }\n\n  return formPost\n}\n\nconst createBareUpload = file => file.data\n\nmodule.exports = class MiniXHRUpload {\n  constructor (uppy, opts) {\n    this.uppy = uppy\n    this.opts = {\n      validateStatus (status) {\n        return status >= 200 && status < 300\n      },\n      ...opts,\n    }\n\n    this.requests = opts[internalRateLimitedQueue]\n    this.uploaderEvents = Object.create(null)\n    this.i18n = opts.i18n\n  }\n\n  #getOptions (file) {\n    const { uppy } = this\n\n    const overrides = uppy.getState().xhrUpload\n    const opts = {\n      ...this.opts,\n      ...(overrides || {}),\n      ...(file.xhrUpload || {}),\n      headers: {\n        ...this.opts.headers,\n        ...overrides?.headers,\n        ...file.xhrUpload?.headers,\n      },\n    }\n\n    return opts\n  }\n\n  uploadFile (id, current, total) {\n    const file = this.uppy.getFile(id)\n    if (file.error) {\n      throw new Error(file.error)\n    } else if (file.isRemote) {\n      return this.#uploadRemoteFile(file, current, total)\n    }\n    return this.#uploadLocalFile(file, current, total)\n  }\n\n  #addEventHandlerForFile (eventName, fileID, eventHandler) {\n    this.uploaderEvents[fileID].on(eventName, (targetFileID) => {\n      if (fileID === targetFileID) eventHandler()\n    })\n  }\n\n  #addEventHandlerIfFileStillExists (eventName, fileID, eventHandler) {\n    this.uploaderEvents[fileID].on(eventName, () => {\n      if (this.uppy.getFile(fileID)) eventHandler()\n    })\n  }\n\n  #uploadLocalFile (file, current, total) {\n    const opts = this.#getOptions(file)\n\n    this.uppy.log(`uploading ${current} of ${total}`)\n    return new Promise((resolve, reject) => {\n      // This is done in index.js in the S3 plugin.\n      // this.uppy.emit('upload-started', file)\n\n      const data = opts.formData\n        ? createFormDataUpload(file, opts)\n        : createBareUpload(file, opts)\n\n      const xhr = new XMLHttpRequest()\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy)\n\n      const timer = new ProgressTimeout(opts.timeout, () => {\n        xhr.abort()\n        // eslint-disable-next-line no-use-before-define\n        queuedRequest.done()\n        const error = new Error(this.i18n('timedOut', { seconds: Math.ceil(opts.timeout / 1000) }))\n        this.uppy.emit('upload-error', file, error)\n        reject(error)\n      })\n\n      const id = nanoid()\n\n      xhr.upload.addEventListener('loadstart', () => {\n        this.uppy.log(`[AwsS3/XHRUpload] ${id} started`)\n      })\n\n      xhr.upload.addEventListener('progress', (ev) => {\n        this.uppy.log(`[AwsS3/XHRUpload] ${id} progress: ${ev.loaded} / ${ev.total}`)\n        // Begin checking for timeouts when progress starts, instead of loading,\n        // to avoid timing out requests on browser concurrency queue\n        timer.progress()\n\n        if (ev.lengthComputable) {\n          this.uppy.emit('upload-progress', file, {\n            uploader: this,\n            bytesUploaded: ev.loaded,\n            bytesTotal: ev.total,\n          })\n        }\n      })\n\n      xhr.addEventListener('load', (ev) => {\n        this.uppy.log(`[AwsS3/XHRUpload] ${id} finished`)\n        timer.done()\n        // eslint-disable-next-line no-use-before-define\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n\n        if (opts.validateStatus(ev.target.status, xhr.responseText, xhr)) {\n          const body = opts.getResponseData(xhr.responseText, xhr)\n          const uploadURL = body[opts.responseUrlFieldName]\n\n          const uploadResp = {\n            status: ev.target.status,\n            body,\n            uploadURL,\n          }\n\n          this.uppy.emit('upload-success', file, uploadResp)\n\n          if (uploadURL) {\n            this.uppy.log(`Download ${file.name} from ${uploadURL}`)\n          }\n\n          return resolve(file)\n        }\n        const body = opts.getResponseData(xhr.responseText, xhr)\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr))\n\n        const response = {\n          status: ev.target.status,\n          body,\n        }\n\n        this.uppy.emit('upload-error', file, error, response)\n        return reject(error)\n      })\n\n      xhr.addEventListener('error', () => {\n        this.uppy.log(`[AwsS3/XHRUpload] ${id} errored`)\n        timer.done()\n        // eslint-disable-next-line no-use-before-define\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr))\n        this.uppy.emit('upload-error', file, error)\n        return reject(error)\n      })\n\n      xhr.open(opts.method.toUpperCase(), opts.endpoint, true)\n      // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called. It’s important to set withCredentials\n      // to a boolean, otherwise React Native crashes\n      xhr.withCredentials = Boolean(opts.withCredentials)\n      if (opts.responseType !== '') {\n        xhr.responseType = opts.responseType\n      }\n\n      Object.keys(opts.headers).forEach((header) => {\n        xhr.setRequestHeader(header, opts.headers[header])\n      })\n\n      const queuedRequest = this.requests.run(() => {\n        xhr.send(data)\n        return () => {\n          // eslint-disable-next-line no-use-before-define\n          timer.done()\n          xhr.abort()\n        }\n      }, { priority: 1 })\n\n      this.#addEventHandlerForFile('file-removed', file.id, () => {\n        queuedRequest.abort()\n        reject(new Error('File removed'))\n      })\n\n      this.#addEventHandlerIfFileStillExists('cancel-all', file.id, () => {\n        queuedRequest.abort()\n        reject(new Error('Upload cancelled'))\n      })\n    })\n  }\n\n  #uploadRemoteFile (file) {\n    const opts = this.#getOptions(file)\n    // This is done in index.js in the S3 plugin.\n    // this.uppy.emit('upload-started', file)\n\n    const metaFields = Array.isArray(opts.metaFields)\n      ? opts.metaFields\n    // Send along all fields by default.\n      : Object.keys(file.meta)\n\n    const Client = file.remote.providerOptions.provider ? Provider : RequestClient\n    const client = new Client(this.uppy, file.remote.providerOptions)\n    return client.post(file.remote.url, {\n      ...file.remote.body,\n      endpoint: opts.endpoint,\n      size: file.data.size,\n      fieldname: opts.fieldName,\n      metadata: Object.fromEntries(metaFields.map(name => [name, file.meta[name]])),\n      httpMethod: opts.method,\n      useFormData: opts.formData,\n      headers: opts.headers,\n    }).then(res => new Promise((resolve, reject) => {\n      const { token } = res\n      const host = getSocketHost(file.remote.companionUrl)\n      const socket = new Socket({ target: `${host}/api/${token}`, autoOpen: false })\n      this.uploaderEvents[file.id] = new EventTracker(this.uppy)\n\n      const queuedRequest = this.requests.run(() => {\n        socket.open()\n        if (file.isPaused) {\n          socket.send('pause', {})\n        }\n\n        return () => socket.close()\n      })\n\n      this.#addEventHandlerForFile('file-removed', file.id, () => {\n        socket.send('pause', {})\n        queuedRequest.abort()\n        resolve(`upload ${file.id} was removed`)\n      })\n\n      this.#addEventHandlerIfFileStillExists('cancel-all', file.id, () => {\n        socket.send('pause', {})\n        queuedRequest.abort()\n        resolve(`upload ${file.id} was canceled`)\n      })\n\n      this.#addEventHandlerForFile('upload-retry', file.id, () => {\n        socket.send('pause', {})\n        socket.send('resume', {})\n      })\n\n      this.#addEventHandlerIfFileStillExists('retry-all', file.id, () => {\n        socket.send('pause', {})\n        socket.send('resume', {})\n      })\n\n      socket.on('progress', (progressData) => emitSocketProgress(this, progressData, file))\n\n      socket.on('success', (data) => {\n        const body = opts.getResponseData(data.response.responseText, data.response)\n        const uploadURL = body[opts.responseUrlFieldName]\n\n        const uploadResp = {\n          status: data.response.status,\n          body,\n          uploadURL,\n          bytesUploaded: data.bytesUploaded,\n        }\n\n        this.uppy.emit('upload-success', file, uploadResp)\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n        return resolve()\n      })\n\n      socket.on('error', (errData) => {\n        const resp = errData.response\n        const error = resp\n          ? opts.getResponseError(resp.responseText, resp)\n          : Object.assign(new Error(errData.error.message), { cause: errData.error })\n        this.uppy.emit('upload-error', file, error)\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n        reject(error)\n      })\n    }).catch((err) => {\n      this.uppy.emit('upload-error', file, err)\n      return Promise.reject(err)\n    }))\n  }\n}\n"]}